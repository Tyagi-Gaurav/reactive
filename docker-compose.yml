version: '3.7'

services:
  configserver:
    image: local.config-server
    build: configserver
    ports:
      - "8888:8888"
    healthcheck:
      test: curl --fail -s http://localhost:8888/actuator/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 10
  routing-service:
    image: local.routing-service
    build: routing-service
    links:
      - "configserver:local.config-server"
      - "service-discovery:local.service-discovery"
    depends_on:
      - configserver
      - service-discovery
    ports:
      - "8082:8082"
    command: ["/bin/bash", "/data/startup.sh", "curl -i -vvv http://local.config-server:8888/actuator/health"]
  cargo-service:
    image: local.cargo-service
    build: cargo-service
    links:
      - "configserver:local.config-server"
      - "service-discovery:local.service-discovery"
      - "kafka:local.kafka"
    depends_on:
      - configserver
      - service-discovery
    ports:
      - "8081:8081"
    command: ["/bin/bash", "/data/startup.sh", "curl -i -vvv http://local.config-server:8888/actuator/health"]
  service-discovery:
    image: local.service-discovery
    build: service-discovery
    ports:
      - "8761:8761"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    links:
      - "zookeeper:local.zookeeper"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: local.kafka
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: local.zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  default:
    driver: bridge