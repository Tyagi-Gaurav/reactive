version: '3.7'

services:
#  configserver:
#    image: local.config-server
#    build: configserver
#    ports:
#      - "8888:8888"
#    healthcheck:
#      test: curl --fail -s http://localhost:8888/actuator/health || exit 1
#      interval: 30s
#      timeout: 10s
#      retries: 10
#  routing-service:
#    image: local.routing-service
#    build: routing-service
#    links:
#      - "configserver:local.config-server"
#      - "service-discovery:local.service-discovery"
#    depends_on:
#      - configserver
#      - service-discovery
#      - routingDatabase
#    ports:
#      - "8082:8082"
#    command: ["/bin/bash", "/data/startup.sh", "curl -i -vvv http://local.config-server:8888/actuator/health"]
#  cargo-service:
#    image: local.cargo-service
#    build: cargo-service
#    links:
#      - "configserver:local.config-server"
#      - "service-discovery:local.service-discovery"
#      - "kafka:local.kafka"
#    depends_on:
#      - configserver
#      - service-discovery
#    ports:
#      - "8081:8081"
#    command: ["/bin/bash", "/data/startup.sh", "curl -i -vvv http://local.config-server:8888/actuator/health"]
#  service-discovery:
#    image: local.service-discovery
#    build: service-discovery
#    ports:
#      - "8761:8761"
#  security-service:
#    image: local.security-service
#    build: security-service
#    ports:
#      - "8091:8091"
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "2181:2181"
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper
#    ports:
#      - 9092:9092
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  carrier-simulator:
    image: local.carrier-simulator
    build: carrier-simulator
    ports:
      - 8083:8083
  carrier-simulator-database:
    image: mongo:4.0.4
    ports:
      - 27017:27017
networks:
  default:
    driver: bridge